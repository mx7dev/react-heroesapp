{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","components/routers/PrivateRoute.js","components/routers/PublicRoute.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","components/selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","components/selectors/getHeroById.js","components/marvel/MarvelScreen.js","components/search/SearchScreen.js","components/hooks/useForm.js","components/selectors/getHeroesByName.js","components/ui/Navbar.js","components/routers/DashboardRoutes.js","components/routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","PublicRoute","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","getItem","console","log","name","replace","heroes","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","style","maxWidth","src","alt","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","key","DcScreen","HeroScreen","heroeid","useParams","find","goBack","MarvelScreen","SearchScreen","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","reset","handleInputChange","target","value","useForm","searchText","formValues","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","push","placeholder","autoComplete","onChange","length","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43d14055.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext();","\r\n\r\nexport const types  = {\r\n\r\n    login:  '[auth] login',\r\n    logout: '[auth] logout',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n// const state ={\r\n//     name:'Maximo',\r\n//     logged:true\r\n// }\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath',rest.location.pathname);\r\n    return (\r\n        <Route  { ...rest}\r\n         component={ (props) => (\r\n             (isAuthenticated)\r\n                ? (<Component {...props} />)\r\n                : ( <Redirect to=\"/login\" />)\r\n         )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes ={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route  { ...rest}\r\n         component={ (props) => (\r\n             (!isAuthenticated)\r\n                ? (<Component {...props} />)\r\n                : ( <Redirect to=\"/\" />)\r\n         )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes ={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const LoginScreen = ({history}) => {\r\n\r\n    const {dispatch} = useContext(AuthContext)\r\n\r\n    \r\n\r\n\r\n    const handlelogin = ()=>{\r\n\r\n\r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n\r\n        console.log(lastPath);\r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Maximo'\r\n            }\r\n        });\r\n\r\n        history.replace( lastPath );\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login</h1>\r\n            <hr/>\r\n\r\n            <button className=\"btn btn-primary\"\r\n             onClick={handlelogin}\r\n            >\r\n                Ingresar\r\n            </button>\r\n        </div>\r\n    )\r\n}","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const HeroCard = ({\r\n\r\n    id,\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters\r\n\r\n}) => {\r\n    return (\r\n        <div className=\"card ms-3\" style={{ maxWidth: 540 }}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero} />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{superhero}</h5>\r\n                    <p className=\"card-text\">{alter_ego}</p>\r\n\r\n                    {\r\n                        (alter_ego !== characters)\r\n                        && <p className=\"card-text\">{characters}</p>\r\n\r\n                    }\r\n                    <p className=\"card-text\">\r\n                        <small className=\"text-muted\">{first_appearance}</small>\r\n                    </p>\r\n\r\n                    <Link to={`./hero/${id}`} >\r\n                        Mas...\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../selectors/getHeroesByPublisher'\r\nimport { HeroCard } from './HeroCard';\r\n\r\nexport const HeroList = ({ publisher }) => {\r\n\r\n     const heroes =  useMemo(() =>  getHeroesByPublisher(publisher), [publisher])\r\n\r\n    //const heroes = getHeroesByPublisher(publisher);\r\n\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeIn\">\r\n            { \r\n                heroes.map(hero => (\r\n                    <HeroCard\r\n                        key={hero.id}\r\n                        {...hero} \r\n                    />\r\n                    \r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport {heroes} from '../../data/heroes';\r\n\r\nexport const getHeroesByPublisher =(publisher)=> {\r\n\r\n    const validPublishers = ['DC Comics','Marvel Comics'];\r\n\r\n    if (!validPublishers.includes(publisher)){\r\n\r\n        throw new Error(`Publisher \"${ publisher}\" no es correcto`);\r\n    }\r\n    return  heroes.filter(hero=> hero.publisher === publisher);\r\n}","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList';\r\n\r\n\r\nexport const DcScreen = () => {\r\n    const publisher = \"DC Comics\";\r\n    return (\r\n\r\n        <div>\r\n            <h1>DC Screen</h1>\r\n            <HeroList publisher={publisher}  />\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { getHeroById } from '../selectors/getHeroById';\r\n\r\nexport const HeroScreen = ({history}) => {\r\n\r\n    const { heroeid } = useParams();\r\n\r\n    const hero =  useMemo(() =>  getHeroById(heroeid), [heroeid])\r\n\r\n    \r\n\r\n    if (!hero) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    const handleReturn =()=>{\r\n        history.goBack();\r\n    }\r\n\r\n    const {\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters, superhero } = hero;\r\n\r\n        \r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img src={`../assets/heroes/${heroeid}.jpg`}\r\n                    alt={superhero}\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                />\r\n\r\n            </div>\r\n            <div className=\"col-8\">\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><b>Alter ego: </b> {alter_ego}</li>\r\n                    <li className=\"list-group-item\"><b>Publisher: </b> {publisher}</li>\r\n                    <li className=\"list-group-item\"><b>First appareance: </b> {first_appearance}</li>\r\n                </ul>\r\n                <h5>Characters</h5>\r\n                <p>{characters}</p>\r\n\r\n                <button \r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={handleReturn}\r\n                >\r\n                    Return\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { heroes } from '../../data/heroes'\r\n\r\nexport const getHeroById = (id) => {\r\n    \r\n    return heroes.find(hero=> hero.id=== id)\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList';\r\n\r\nexport const MarvelScreen = () => {\r\n    const publisher = \"Marvel Comics\";\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            <HeroList publisher={publisher}  />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\nimport queryString from 'query-string';\nimport { HeroCard } from '../heroes/HeroCard';\nimport { useForm } from '../hooks/useForm';\nimport { useLocation } from 'react-router-dom';\nimport { getHeroesByName } from '../selectors/getHeroesByName'\n\nexport const SearchScreen = ({ history }) => {\n\n    const location = useLocation();\n    const { q = '' } = queryString.parse( location.search );\n\n    const [ formValues, handleInputChange ] = useForm({\n        searchText: q\n    });\n    const { searchText } = formValues;\n    \n    const heroesFiltered = useMemo(() => getHeroesByName( q ), [q])\n\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        history.push(`?q=${ searchText }`);\n    }\n\n    return (\n        <div>\n            <h1>Search Screen</h1>\n            <hr />\n            \n            <div className=\"row\">\n                \n                <div className=\"col-5\">\n                    <h4> Search Form </h4>\n                    <hr />\n\n                    <form onSubmit={ handleSearch }>\n                        <input \n                            type=\"text\"\n                            placeholder=\"Find your hero\"\n                            className=\"form-control\"\n                            name=\"searchText\"\n                            autoComplete=\"off\"\n                            value={ searchText }\n                            onChange={ handleInputChange }\n                        />\n\n                        <button\n                            type=\"submit\"\n                            className=\"btn m-1 btn-block btn-outline-primary\"\n                        >\n                            Search...\n                        </button>\n                    </form>\n\n\n                </div>\n\n\n                <div className=\"col-7\">\n\n                    <h4> Results </h4>\n                    <hr />\n\n                    { \n                        (q ==='') \n                            && \n                            <div className=\"alert alert-info\">\n                                Search a hero\n                            </div>\n                    }\n\n                    { \n                        (q !=='' && heroesFiltered.length === 0 ) \n                            && \n                            <div className=\"alert alert-danger\">\n                                There is no a hero with { q }\n                            </div>\n                    }\n\n                    {\n                        heroesFiltered.map( hero => (\n                            <HeroCard \n                                key={ hero.id }\n                                { ...hero }\n                            />\n                        ))\n                    }\n\n                </div>\n\n            </div>\n\n\n        </div>\n    )\n}\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import { heroes } from '../../data/heroes';\n\n\nexport const getHeroesByName = ( name = '' ) => {\n\n    if ( name === '' ) {\n        return [];\n    }\n\n    name = name.toLocaleLowerCase();\n    return heroes.filter( hero => hero.superhero.toLocaleLowerCase().includes( name )  );\n\n}","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n\r\n     const { user:{name},dispatch} = useContext(AuthContext);\r\n\r\n     const history =  useHistory();\r\n     \r\n\r\n     const handleLogout =() => {\r\n\r\n        history.replace('/login');\r\n\r\n        dispatch({\r\n            type:types.logout\r\n        });\r\n     }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <span className=\"nav-item nav-link text-info\"> {name}</span>\r\n                    <button \r\n                        className=\"nav-item nav-link btn\"\r\n                        onClick={ handleLogout }\r\n                    > \r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { DcScreen } from '../dc/DcScreen'\r\nimport { HeroScreen } from '../heroes/HeroScreen'\r\nimport { MarvelScreen } from '../marvel/MarvelScreen'\r\nimport { SearchScreen } from '../search/SearchScreen'\r\nimport { Navbar } from '../ui/Navbar'\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n         <Navbar  />   \r\n        <div className=\"container mt-3\">\r\n            <Switch>\r\n                <Route exact path=\"/marvel\" component={ MarvelScreen}/>\r\n                <Route exact path=\"/hero/:heroeid\" component={ HeroScreen}/>\r\n                <Route exact path=\"/dc\" component={ DcScreen}/>\r\n                <Route exact path=\"/search\" component={ SearchScreen}/>\r\n                <Redirect to=\"/marvel\" />\r\n\r\n\r\n            </Switch>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch\r\n} from \"react-router-dom\";\r\n\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\n\r\n\r\nimport { LoginScreen } from '../login/LoginScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\n\r\nexport const AppRouter = () => {\r\n\r\nconst {user} = useContext(AuthContext)\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n            \r\n                <Switch>\r\n                    <PublicRoute exact path=\"/Login\" component={ LoginScreen} \r\n                    isAuthenticated={user.logged}\r\n                    />\r\n\r\n                    <PrivateRoute path=\"/\" component={ DashboardRoutes }\r\n                    isAuthenticated={user.logged}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer';\r\nimport { AppRouter } from './components/routers/AppRouter'\r\n\r\nconst init =()=>{\r\n\r\n\r\n\r\n    return JSON.parse(localStorage.getItem('user'))|| {logged:false} ;\r\n\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init)\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem('user',JSON.stringify(user));\r\n    },[user]);\r\n\r\n    return (\r\n\r\n        <AuthContext.Provider value={{ user,dispatch}}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n       \r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HeroesApp } from './HeroesApp';\r\n\r\nReactDOM.render(\r\n    <HeroesApp />\r\n    ,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}